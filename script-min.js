import{getData}from"./src/getPortfolioData-min.js";import"./src/typed-min.js";import{setQuill}from"./src/quill-min.js";class Data{constructor(){this.projects,this.groups}async getProjectAsync(){try{const{err:e,projects:t}=await getData("posts");if(e)throw new Error(e);if(!t||0===t.lenght)throw new Error("No post in posts");const n=new Set;return t.forEach((e=>n.add(e.group))),this.groups=n,this.projects=t,t}catch(e){}}}class View{constructor(){}renderProjects(e,t=""){if(this.projectContainer=document.querySelector(".projects-container"),!e)return;let n=[];this.projectContainer.innerHTML="",n=""!==t?e.filter((e=>e.group===t)):e,n.forEach((e=>{let t="";t=e.description.length>120?e.description.slice(0,120)+"...":e.description;const n=`\n       <div class="project-card" data-title="${e.title}">\n        <div class='project-image-div'data-title="${e.title}">\n         <img\n              class="project-image"\n              src="${e.cover}"\n              alt="project image"\n              data-title="${e.title}"\n              loading="lazy"\n            />\n        </div>\n            <div class='project-info' data-title="${e.title}">\n              <p class="project-title" data-title="${e.title}">${e.title}</p>\n            <p class="project-description" data-title="${e.title}">${t}</p>\n            <button class='detail' data-title='${e.title}'>Detail</button>\n            </div>\n          </div>\n      `;this.projectContainer.innerHTML+=n}))}renderGroupsSelector(e,t){const n=document.querySelector(".group-select");n.innerHTML="";const o=document.createElement("option");o.value="",o.innerText=`All (${t.length})`,o.classList.add("group-option"),n.appendChild(o),e.forEach((e=>{const o=document.createElement("option");o.value=e,o.innerText=`${e} (${t.filter((t=>t.group===e)).length})`,o.classList.add("group-option"),n.appendChild(o)}))}openProjectDisplay(e){const t=document.querySelector(".project-display-outter");t.classList.add("show");t.querySelector(".project-display-title").innerText=e.title;const n=t.querySelector(".project-display-tags");n.innerHTML="",e.tags&&e.tags.forEach((e=>{const t=document.createElement("span");t.innerText=e.name,t.classList.add("project-display-tag"),n.appendChild(t)}));const o=t.querySelector(".project-display-meta");o.innerHTML="",e.meta&&e.meta.forEach((e=>{const t=document.createElement("p");t.innerHTML=`<span class='meta'>${e.key}</span> <a target='_blank' href=${e.value}>${e.value}</a>`,o.appendChild(t)})),setQuill(e.data)}closeProjectDisplay(){document.querySelector(".project-display-outter").classList.remove("show")}openBurgerMenu(){document.querySelector("nav").classList.add("open")}closeBurgerMenu(){document.querySelector("nav").classList.remove("open")}displayFlashMessage(e,t=3e3){const n=document.querySelector("#flash");n.innerText=e,n.classList.remove("out"),n.classList.add("in"),setTimeout((()=>{n.classList.remove("in"),n.classList.add("out")}),t)}}class Controller{constructor(e,t){this.data=e,this.view=t}async init(){this.eventSetup();const e=await this.data.getProjectAsync();e&&this.view.renderProjects(e,""),this.data.groups&&(this.view.renderGroupsSelector(this.data.groups,this.data.projects),this.changeProjectGroup("web"))}eventSetup(){document.addEventListener("click",(e=>{const t=document.querySelector("nav"),n=document.querySelector(".burger-container");t.contains(e.target)||n.contains(e.target)||this.view.closeBurgerMenu()})),document.querySelector(".burger-container").addEventListener("click",(e=>{e.stopPropagation();document.querySelector(".nav").classList.contains("open")?this.view.closeBurgerMenu():this.view.openBurgerMenu()})),document.querySelector(".group-select").addEventListener("change",(e=>this.OnTagSelectorChange(e)));const e=document.querySelector(".project-display-outter"),t=document.querySelector(".project-display");e.addEventListener("click",(e=>{t.contains(e.target)||this.view.closeProjectDisplay()}));document.querySelector(".project-display-close").addEventListener("click",(()=>{this.view.closeProjectDisplay()}));document.querySelector("#contact-form").addEventListener("submit",(e=>{this.onFromSubmit(e)}));document.querySelector("#theme-toggle-input").addEventListener("click",(()=>{this.toggleTheme()}))}async OnTagSelectorChange(e){if(e){const t=e.target.value;this.view.renderProjects(this.data.projects,t);document.querySelectorAll(".detail").forEach((e=>{e.addEventListener("click",(e=>{this.onOpenDisplayClick(e)}))}));document.querySelectorAll(".project-card").forEach((e=>{e.addEventListener("click",(e=>{this.onOpenDisplayClick(e)}))}))}}changeProjectGroup(e){const t=document.querySelector(".group-select");t.value=e;const n=new Event("change");t.dispatchEvent(n)}onOpenDisplayClick(e){const t=e.target.getAttribute("data-title"),n=this.data.projects.find((e=>e.title===t));this.view.openProjectDisplay(n)}async onFromSubmit(e){const t=document.querySelector("#contact-form");try{e.preventDefault();if(!this.checkFormValidation())return;const n=new FormData(t),o=Object.fromEntries(n),r=JSON.stringify(o),i=document.querySelector(".submit");i.classList.remove("ready"),i.disabled=!0,i.innerText="Sending...";const a=await fetch("https://api.web3forms.com/submit",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:r});if(!a.ok)throw new Error(a.status);this.view.displayFlashMessage("Message Sent!")}catch(e){this.view.displayFlashMessage("Something went wrong")}finally{i.classList.add("ready"),i.disabled=!1,i.innerText="Submit",t.reset()}}checkFormValidation(e){const t=document.querySelector("#name"),n=document.querySelector("#email"),o=document.querySelector("#message"),r=[document.querySelector("#name-validation"),document.querySelector("#email-validation"),document.querySelector("#message-validation")];r.forEach((e=>e.classList.remove("active")));let i=0;const a=[t.validity,n.validity,o.validity];for(let e=0;e<a.length;e++)a[e].valid?i+=1:(a[e].valueMissing?r[e].innerText="Required":a[e].typeMismatch?"email-validation"===r[e].id?r[e].innerText="Please enter valide email":r[e].innerText="Please enter valide info":a[e].tooShort?r[e].innerText="Minimum 10 characters":r[e].innerText="Invalide Input",r[e].classList.add("active"));return i===a.length}toggleTheme(){"light"===document.documentElement.getAttribute("data-theme")?document.documentElement.removeAttribute("data-theme"):document.documentElement.setAttribute("data-theme","light")}}const data=new Data,view=new View,controller=new Controller(data,view);document.addEventListener("DOMContentLoaded",(()=>{controller.init()}));